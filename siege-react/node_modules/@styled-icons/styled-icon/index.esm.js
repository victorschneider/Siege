import * as React from 'react';
import styled from 'styled-components';
import validProp from '@emotion/is-prop-valid';

function isValidProp(key) {
  return validProp(key);
}

function filterSVGProps(props) {
  return Object.keys(props).reduce((p, k) => {
    if (isValidProp(k)) {
      // hack to satisfy TypeScript complexity
      ;
      p[k] = props[k];
    }

    return p;
  }, {});
}

const StyledIconBaseBase = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    children,
    iconAttrs,
    iconVerticalAlign,
    iconViewBox,
    size,
    title,
    ...otherProps
  } = props;
  const iconProps = {
    viewBox: iconViewBox,
    height: props.height !== undefined ? props.height : size,
    width: props.width !== undefined ? props.width : size,
    'aria-hidden': title == null ? 'true' : undefined,
    focusable: 'false',
    role: title != null ? 'img' : undefined,
    ...iconAttrs
  };
  const svgProps = filterSVGProps(otherProps);
  return /*#__PURE__*/React.createElement("svg", Object.assign({}, iconProps, svgProps, {
    ref: ref
  }), title && /*#__PURE__*/React.createElement("title", {
    key: "icon-title"
  }, title), children);
});
export const StyledIconBase = /*#__PURE__*/styled(StyledIconBaseBase).withConfig({
  displayName: "StyledIconBase",
  componentId: "ea9ulj-0"
})(["display:inline-block;vertical-align:", ";overflow:hidden;"], props => props.iconVerticalAlign);